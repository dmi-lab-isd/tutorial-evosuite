/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 03 03:09:01 GMT 2020
 */

package tutorial;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import tutorial.ShoppingCart;
import tutorial.Warehouse;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ShoppingCart_ESTest extends ShoppingCart_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Warehouse warehouse0 = new Warehouse();
      ShoppingCart shoppingCart0 = new ShoppingCart(warehouse0);
      // Undeclared exception!
      try { 
        shoppingCart0.removeOne("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Product not in cart: 
         //
         verifyException("tutorial.ShoppingCart", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Warehouse warehouse0 = new Warehouse();
      warehouse0.addProduct("8l5oWqs`*uux_0", 1);
      ShoppingCart shoppingCart0 = new ShoppingCart(warehouse0);
      shoppingCart0.addOne("8l5oWqs`*uux_0");
      shoppingCart0.removeOne("8l5oWqs`*uux_0");
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Warehouse warehouse0 = new Warehouse();
      ShoppingCart shoppingCart0 = new ShoppingCart(warehouse0);
      // Undeclared exception!
      try { 
        shoppingCart0.addOne(">S<Mi<6q@mOj");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Not enough qty left of product: >S<Mi<6q@mOj
         //
         verifyException("tutorial.ShoppingCart", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ShoppingCart shoppingCart0 = new ShoppingCart((Warehouse) null);
      // Undeclared exception!
      try { 
        shoppingCart0.addOne("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("tutorial.ShoppingCart", e);
      }
  }
}
